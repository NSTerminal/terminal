// Copyright 2021-2023 Aidan Sun and the Network Socket Terminal contributors
// SPDX-License-Identifier: GPL-3.0-or-later

module;
#include <mutex>
#include <optional>
#include <string>

#include <imgui.h>

export module components.ioconsole;
import components.console;
import os.error;

// Manages a textbox and mutex-protected console with config options.
export class IOConsole {
    Console console;
    std::mutex consoleMutex;

    // State
    bool focusOnTextbox = false; // If keyboard focus is applied to the textbox
    std::string textBuf;         // Send textbox buffer

    // Options
    int currentLE = 0;                // Index of the line ending selected
    bool sendEchoing = true;          // If sent strings are displayed in the output
    bool clearTextboxOnSubmit = true; // If the textbox is cleared when the submit callback is called
    bool addFinalLineEnding = false;  // If a final line ending is added to the callback input string
    unsigned int recvSize = 1024; // Unsigned int to work with ImGuiDataType

    void drawControls();

public:
    // Draws the window contents and returns text entered into the textbox when Enter is pressed.
    std::optional<std::string> update();

    unsigned int getRecvSize() {
        return recvSize;
    }

    // Prints the details of a thrown exception.
    void errorHandler(const System::SystemError& error);

    void addInfo(std::string_view s) {
        std::scoped_lock g{ consoleMutex };
        console.addInfo(s);
    }

    void addText(std::string_view s, std::string_view pre = "", const ImVec4& color = {}, bool canUseHex = true,
                 std::string_view hoverText = "") {
        std::scoped_lock g{ consoleMutex };
        console.addText(s, pre, color, canUseHex, hoverText);
    }
};
