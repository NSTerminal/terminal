// Copyright 2021-2023 Aidan Sun and the Network Socket Terminal contributors
// SPDX-License-Identifier: GPL-3.0-or-later

module;
#include <memory>
#include <string_view>
#include <vector>

export module windows.connserverwindow;
import gui.ioconsole;
import sockets.delegates.delegates;
import sockets.socket;
import utils.task;
import windows.windowlist;
import windows.window;

export class ConnServerWindow : public Window {
    SocketPtr socket;
    bool pendingAccept = false;

    std::vector<AcceptResult> unopenedSockets;

    IOConsole console;
    WindowList connWindows;

    Task<> accept();

    void onInit() override;

    void onBeforeUpdate() override;

    void onUpdate() override;

public:
    explicit ConnServerWindow(std::unique_ptr<Socket>&& socket) : Window("asdsa"), socket(std::move(socket)) {}

    ~ConnServerWindow() override {
        socket->cancelIO();
    }
};
