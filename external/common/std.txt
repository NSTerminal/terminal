includes
    algorithm
    atomic
    array
    bit
    charconv
    chrono
    cfloat
    cmath
    concepts
    cstring
    ctime
    coroutine
    cstdint
    format
    fstream
    functional
    future
    iterator
    limits
    map
    memory
    mutex
    numbers
    optional
    queue
    ranges
    source_location
    span
    string
    string_view
    thread
    tuple
    type_traits
    unordered_map
    variant
    vector
    system_error
    utility

functions
    std::tm* localtime2(const std::time_t* timer) -> return std::localtime(timer) // Windows headers define this as static

i8 std::int8_t
u8 std::uint8_t
i16 std::int16_t
u16 std::uint16_t
i32 std::int32_t
u32 std::uint32_t
i64 std::int64_t
u64 std::uint64_t

ns std
    array
    unique_ptr
    optional
    string
    string_view
    wstring
    basic_string
    basic_string_view
    vector
    system_error
    runtime_error
    coroutine_traits
    coroutine_handle
    format
    unreachable
    move
    forward
    monostate
    nullopt
    exchange
    ifstream
    ofstream
    thread
    size_t
    make_unique
    shared_ptr
    make_shared
    find
    bind_front
    variant
    future
    future_status
    holds_alternative
    async
    launch
    visit
    map
    unordered_map
    erase_if
    less
    greater
    to_string
    to_wstring
    memcpy
    tie
    queue
    stoi
    strerror
    to_underlying
    in_place
    span
    atomic_bool
    exception
    pair
    from_chars
    errc
    getline
    bad_optional_access
    stoull
    cmp_equal
    cmp_not_equal
    to_array
    ref

    integral
    floating_point
    is_same_v
    derived_from
    constructible_from
    same_as
    invoke_result_t
    conditional_t
    is_void_v

    suspend_always
    suspend_never
    coroutine_handle
    noop_coroutine
    current_exception
    rethrow_exception
    exception_ptr

    abs
    floor
    max
    round

    mutex
    scoped_lock

    numeric_limits
    source_location

    back_inserter

    endian
    byteswap

    operator==
    operator!=
    operator+
    operator<<
    operator<
    operator<=>

    ns:inline literals
        operator""s
        operator""sv

        ns:inline chrono_literals
            operator""s
            operator""ms

    ns chrono
        system_clock
        milliseconds
        duration_cast

        operator%

    ns numbers
        pi

    ns ranges
        stable_sort
        find_if
        to

        ns views
            split
            drop
            transform
            join

        // The MSVC STL defines this in its own namespace
        ns _Pipe
            operator| __attribute__((using_if_exists))

    ns views ranges::views

    ns this_thread
        sleep_for
